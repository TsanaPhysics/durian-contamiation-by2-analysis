import streamlit as st
import cv2
import numpy as np
from PIL import Image
from skimage.feature import local_binary_pattern
from streamlit_webrtc import webrtc_streamer, VideoTransformerBase

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ UI ‡πÅ‡∏ö‡∏ö Custom
st.set_page_config(page_title="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö BY2 ‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", layout="wide")

# CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á UI
st.markdown(
    """
    <style>
    body {
        background: linear-gradient(to right, #ffefba, #ffffff);
        font-family: 'Arial', sans-serif;
    }
    .stApp {
        background: linear-gradient(120deg, #ff9a9e, #fad0c4);
    }
    .title {
        font-size: 2.5rem;
        font-weight: bold;
        text-align: center;
        color: #ffffff;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    }
    .risk-label {
        font-size: 1.2rem;
        font-weight: bold;
    }
    .uploaded-file {
        display: flex;
        justify-content: center;
    }
    </style>
    """,
    unsafe_allow_html=True
)

st.markdown('<h1 class="title">üîç ‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô BY2 ‡πÉ‡∏ô‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô  üçå</h1>', unsafe_allow_html=True)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
mode = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î:", ["üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û", "üì∑ ‡∏Å‡∏•‡πâ‡∏≠‡∏á Live"], horizontal=True)

def analyze_durian(image):
    img = np.array(image.convert('RGB'))
    img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)
    
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    avg_hue = np.mean(hsv[:, :, 0])  
    avg_saturation = np.mean(hsv[:, :, 1])  

    color_risk = 1 if (20 < avg_hue < 35 and avg_saturation > 120) else 0
    color_warning = "‡∏û‡∏ö‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥!" if color_risk else "‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥"

    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    lbp = local_binary_pattern(gray, 8, 1, method='uniform')
    texture_score = np.histogram(lbp, bins=10)[0].var()

    texture_risk = 1 if texture_score < 500 else 0
    texture_warning = "‡∏û‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥!" if texture_risk else "‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏õ‡∏Å‡∏ï‡∏¥"

    contamination_risk = (color_risk + texture_risk) / 2 * 100

    return color_warning, texture_warning, contamination_risk

if mode == "üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û":
    uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", type=["jpg", "png"])
    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        st.image(image, caption="üì∑ ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö", use_column_width=True)

        color_warning, texture_warning, contamination_risk = analyze_durian(image)

        # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        st.markdown(f"### üî¨ **‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå**")
        st.error(f"**‡∏™‡∏µ:** {color_warning}")
        st.error(f"**‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß:** {texture_warning}")

        # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
        st.progress(int(contamination_risk))
        if contamination_risk > 70:
            st.error(f"üö® **‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≤‡∏£‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏™‡∏π‡∏á: {contamination_risk:.2f}%**")
        elif contamination_risk > 30:
            st.warning(f"‚ö†Ô∏è **‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≤‡∏£‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á: {contamination_risk:.2f}%**")
        else:
            st.success(f"‚úÖ **‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡∏≤‡∏£‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô‡∏ï‡πà‡∏≥: {contamination_risk:.2f}%**")

elif mode == "üì∑ ‡∏Å‡∏•‡πâ‡∏≠‡∏á Live":
    class VideoTransformer(VideoTransformerBase):
        def transform(self, frame):
            img = frame.to_ndarray(format="bgr24")
            image_pil = Image.fromarray(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
            _, _, contamination_risk = analyze_durian(image_pil)

            # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ö‡∏ô‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
            color = (0, 255, 0) if contamination_risk < 30 else (0, 165, 255) if contamination_risk < 70 else (0, 0, 255)
            label = f"Risk: {contamination_risk:.2f}%"
            cv2.putText(img, label, (20, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, color, 2, cv2.LINE_AA)
            
            return img

    webrtc_streamer(key="live", video_transformer_factory=VideoTransformer)
    
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥
st.warning("‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏•‡∏≤‡∏î‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏≤‡πÄ‡∏õ‡∏•‡πà‡∏≤")

# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
with st.expander("‚ÑπÔ∏è ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"):
    st.markdown("""
    ‚úÖ **‡∏ß‡∏¥‡∏ò‡∏µ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥**  
    - **‡∏£‡∏∞‡∏¢‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û**: ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì **30-50 ‡∏ã‡∏°.**  
    - **‡∏°‡∏∏‡∏°‡∏Å‡∏•‡πâ‡∏≠‡∏á**: ‡∏ñ‡πà‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏ï‡∏£‡∏á‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏≠‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô **45 ‡∏≠‡∏á‡∏®‡∏≤**  
    - **‡πÅ‡∏™‡∏á**: ‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏á‡πÑ‡∏ü‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏™‡∏á‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏™‡∏á‡∏ô‡πâ‡∏≠‡∏¢  
    - **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏°‡∏ä‡∏±‡∏î**: ‡∏†‡∏≤‡∏û‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ö‡∏•‡∏≠‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ú‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô  
    """)

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î Live
if mode == "üì∑ ‡∏Å‡∏•‡πâ‡∏≠‡∏á Live":
    st.info("üì∑ **‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á Live**\n- ‡∏ñ‡∏∑‡∏≠‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ô‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î\n- ‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠\n- ‡∏ß‡∏≤‡∏á‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏≤‡∏ö‡∏±‡∏á")